generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  username  String     @unique
  password  String
  email     String
  role      String
  deposit   deposit[]
  rekening  rekening[]
  betting   betting[]
  withdraw  withdraw[]
}

model deposit {
  id                Int      @id @default(autoincrement())
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  nominal_deposit   Int
  proof_transaction String
  status            String

  sender_name     String
  sender_rekening String
  sender_bank     String

  recipient_name     String
  recipient_rekening String
  recipient_bank     String

  user    user @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id Int
}

model rekening {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  no_rekening String
  bank        String
  user        user     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id     Int
}

model bank {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bank      String   @unique
}

model betting {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  nominal   Int
  time      Int
  status    String

  user    user @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id Int
}

model withdraw {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  no_rekening String
  bank        String
  nominal     Int
  status      String

  user    user @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id Int
}
